version: '3.9'

x-common-labels: &common_labels
  logging: "promtail"
  env: "dev"
  stack: "demo"

services:
  nginx:
    image: nginx:1.25
    ports:
      - "8080:80"
    depends_on:
      - fastapi
      - flaskblog
      - agent
      - mysql
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    labels:
      <<: *common_labels
      app: "nginx"

  agent:
    build: ./agent
    depends_on:
      - loki
      - promtail
      - mysql
      - redis
    ports:
      - "5050:5000"
    volumes:
      - ./agent:/app
      - ./logs/agent:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/metrics" ]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      <<: *common_labels
      app: "agent"

  tomcat:
    build: ./tomcat
    environment:
      - JAVA_OPTS=-Djava.util.logging.config.file=/usr/local/tomcat/logging.properties
    volumes:
      - ./tomcat/webapps:/usr/local/tomcat/webapps
      - ./logs/tomcat:/usr/local/tomcat/logs
    labels:
      <<: *common_labels
      app: "tomcat"

  redis:
    image: redis:6
    depends_on:
      - mysql
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    labels:
      <<: *common_labels
      app: "redis"

  mysql:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=sampledb
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    labels:
      <<: *common_labels
      app: "mysql"

  fastapi:
    build: ./fastapi
    environment:
      - APP_ENV=dev
    volumes:
      - ./fastapi:/app
      - ./logs/fastapi:/app/logs
    labels:
      <<: *common_labels
      app: "fastapi"

  flaskblog:
    build: ./flaskblog
    environment:
      - APP_ENV=dev
    volumes:
      - ./flaskblog:/app
      - ./logs/flaskblog:/app/logs
    labels:
      <<: *common_labels
      app: "flask-blog"

  locust:
    build: ./locust
    depends_on:
      - nginx
    ports:
      - "8090:8089"
    environment:
      - TARGET_BASE=http://nginx
    labels:
      <<: *common_labels
      app: "locust"

  loki:
    image: grafana/loki:2.9.0
    command: -config.file=/etc/loki/config.yml
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml:ro
      - ./loki/data:/loki
    labels:
      <<: *common_labels
      app: "loki"

  promtail:
    image: grafana/promtail:2.9.0
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs:/var/log/app:ro
    labels:
      <<: *common_labels
      app: "promtail"

  grafana:
    image: grafana/grafana:10.4.3
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    labels:
      <<: *common_labels
      app: "grafana"



# docker-compose down && docker system prune --volumes --force && docker-compose up -d --build