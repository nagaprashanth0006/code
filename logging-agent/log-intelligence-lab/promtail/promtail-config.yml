server:
  http_listen_port: 9080

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # A) Discover all container logs (great for infra + anything without file mounts)
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container'
        regex: '/(.*)'
      - source_labels: ['__meta_docker_container_label_app']
        target_label: 'app'
      - source_labels: ['__meta_docker_container_label_env']
        target_label: 'env'
      - source_labels: ['__meta_docker_container_label_stack']
        target_label: 'stack'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
      - source_labels: ['__meta_docker_container_log_path']
        target_label: '__path__'
    pipeline_stages:
      - docker: {}   # parse docker JSON log

  # B) Tail file logs we purposely write to disk (nginx, fastapi, flask)
  - job_name: app_filelogs
    static_configs:
      - targets: ['localhost']
        labels:
          job: app_filelogs
          env: dev
          __path__: /var/log/app/**.log
    pipeline_stages:
      # Simple multiline for Python loggers with [YYYY-MM-DD ...] prefix
      - multiline:
          firstline: '^\['
          max_wait_time: 3s
      - regex:
          expression: '^\[(?P<ts>[^]]+)\]\s+(?P<level>[A-Z]+)\s+in\s+(?P<module>[^:]+):\s+(?P<msg>.*)'
      - labels:
          level:
          module: